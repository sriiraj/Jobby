{"version":3,"sources":["components/Login/index.js","components/ProtectedRoute/index.js","components/Navbar/index.js","components/Home/index.js","components/JobItems/index.js","components/FilterGroup/index.js","components/Profile/index.js","components/Jobs/index.js","components/SimilarJobs/index.js","components/JobDetail/index.js","components/NotFound/index.js","App.js","index.js"],"names":["Login","state","username","password","showSubmitError","errorMsg","onChangeUserName","event","setState","target","value","onChangePassword","onSubmitLoginButton","a","preventDefault","userDetails","options","method","body","JSON","stringify","fetch","response","json","FetchData","ok","onSubmitSuccessFlow","jwt_token","onSubmitFailureFlow","error_msg","jwtToken","history","props","Cookies","set","expires","path","replace","this","undefined","get","to","className","src","alt","onSubmit","htmlFor","id","placeholder","type","onChange","Component","ProtectedRoute","Cookie","withRouter","OnLogout","remove","onClick","Home","JobItems","JobItemsList","title","rating","companyLogoUrl","location","jobDescription","packagePerAnnum","employmentType","FilterGroup","employmentTypesList","map","i","CheckedEmploymentType","employmentTypeId","name","label","RenderEmploymentType","salaryRangesList","ChangeSalaryRange","salaryRangeId","currentTarget","console","log","RenderSalary","ProfileApiStatusConstants","Profile","profileDetails","apiStatus","getProfileDetails","headers","Authorization","profile_details","OnProfileRetry","ProfileRenderSuccess","profile_image_url","short_bio","ProfileRenderLoading","testid","color","height","width","ProfileRenderFailure","RenderAllProfile","apiStatusConstants","Jobs","JobItemsArray","InputSearch","SalaryRangeId","EmploymentId","JobItemsResponseStructure","Obj","company_logo_url","job_description","package_per_annum","employment_type","GetJobItems","EmploymentStr","join","FetchJobURL","updateData","jobs","onChangeSearchInput","onClickSearchIcon","OnRetry","RenderSearchContainer","RenderJobItems","length","RenderLoader","RenderJobFailure","SalaryId","checked","j","indexOf","k","filter","_","RenderAllJobLists","UpdateCheckBoxArray","SimilarJobs","SimilarJobItems","JobDetail","JobDetails","Skills","LifeAtCompany","similarJobs","JobDetailsResponseStructure","companyWebsiteUrl","company_website_url","SimilarJobsResponseStructure","GetJobDetails","match","params","JobDetailsUrl","UpdateJobDetails","job_details","UpdateJobSkills","skills","SkillImgUrl","image_url","UpdateLifeAtCompany","description","life_at_company","LifeImageUrl","UpdateSimilarJobs","similar_jobs","RenderJobDetails","href","RenderSimilarJobs","RenderJobDetailPage","NotFound","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1ed8e7f.chunk.js","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\nimport './index.css'\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    showSubmitError: false,\n    errorMsg: '',\n  }\n\n  onChangeUserName = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitLoginButton = async event => {\n    const {username, password} = this.state\n    event.preventDefault()\n    const userDetails = {username, password}\n    const LoginURL = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(LoginURL, options)\n    const FetchData = await response.json()\n    if (response.ok === true) {\n      this.onSubmitSuccessFlow(FetchData.jwt_token)\n    } else {\n      this.onSubmitFailureFlow(FetchData.error_msg)\n    }\n  }\n\n  onSubmitSuccessFlow = jwtToken => {\n    const {history} = this.props\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n    })\n    history.replace('/')\n  }\n\n  onSubmitFailureFlow = errorMsg => {\n    this.setState({showSubmitError: true, errorMsg})\n  }\n\n  render() {\n    const {username, password, showSubmitError, errorMsg} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"login-main-container\">\n        <div className=\"login-container\">\n          <img\n            className=\"website-logo\"\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n          />\n          <form className=\"form-container\" onSubmit={this.onSubmitLoginButton}>\n            <div className=\"input-container\">\n              <label className=\"input-field-label\" htmlFor=\"usernameID\">\n                USERNAME\n              </label>\n              <input\n                className=\"input-field\"\n                id=\"usernameID\"\n                placeholder=\"Username\"\n                type=\"text\"\n                onChange={this.onChangeUserName}\n                value={username}\n              />\n            </div>\n            <div className=\"input-container\">\n              <label className=\"input-field-label\" htmlFor=\"PasswordID\">\n                PASSWORD\n              </label>\n              <input\n                className=\"input-field\"\n                id=\"PasswordID\"\n                placeholder=\"Password\"\n                type=\"password\"\n                onChange={this.onChangePassword}\n                value={password}\n              />\n            </div>\n            <button type=\"submit\" className=\"Login-button\">\n              Login\n            </button>\n            {showSubmitError && <p className=\"error-message\">*{errorMsg}</p>}\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Login\n","import {Route, Redirect} from 'react-router-dom'\nimport Cookie from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const JwtToken = Cookie.get('jwt_token')\n  if (JwtToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\nexport default ProtectedRoute\n","import {Link, withRouter} from 'react-router-dom'\nimport {AiFillHome} from 'react-icons/ai'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport {FiLogOut} from 'react-icons/fi'\nimport Cookies from 'js-cookie'\nimport './index.css'\n\nconst Navbar = props => {\n  const OnLogout = () => {\n    const {history} = props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n\n  return (\n    <nav className=\"nav-header\">\n      <div className=\"nav-large-screen\">\n        <Link to=\"/\">\n          <img\n            className=\"nav-logo\"\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n          />\n        </Link>\n        <ul className=\"nav-list\">\n          <li className=\"nav-list-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n          <li className=\"nav-list-item\">\n            <Link to=\"/jobs\" className=\"nav-link\">\n              Jobs\n            </Link>\n          </li>\n        </ul>\n        <button className=\"logout-button\" type=\"button\" onClick={OnLogout}>\n          Logout\n        </button>\n      </div>\n      <div className=\"nav-mobile-screen\">\n        <Link to=\"/\">\n          <img\n            className=\"nav-logo-mobile\"\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n          />\n        </Link>\n        <ul className=\"nav-list-mobile\">\n          <li className=\"nav-list-item-mobile\">\n            <Link to=\"/\">\n              <AiFillHome className=\"nav-icons\" />\n            </Link>\n          </li>\n          <li className=\"nav-list-item-mobile\">\n            <Link to=\"/\">\n              <BsFillBriefcaseFill className=\"nav-icons\" />\n            </Link>\n          </li>\n          <li className=\"nav-list-item-mobile\">\n            <Link to=\"/\">\n              <FiLogOut className=\"nav-icons\" onClick={OnLogout} />\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\nexport default withRouter(Navbar)\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect, Link} from 'react-router-dom'\nimport Navbar from '../Navbar'\nimport './index.css'\n\nclass Home extends Component {\n  render() {\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken === undefined) {\n      return <Redirect to=\"/login\" />\n    }\n    return (\n      <div className=\"Home-main-container\">\n        <Navbar />\n        <div className=\"Home-container\">\n          <div className=\"Home-content-container\">\n            <h1 className=\"Home-heading\">Find The Job That Fits Your Life</h1>\n            <p className=\"Home-description\">\n              Millions of people are searching for jobs,salary information,\n              company reviews. Find the job that fits your ability and potential\n            </p>\n            <Link to=\"/jobs\">\n              <button type=\"button\" className=\"find-job-button\">\n                Find Jobs\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Home\n","import './index.css'\nimport {Link} from 'react-router-dom'\nimport {MdLocationOn} from 'react-icons/md'\nimport {BsFillStarFill, BsFillBriefcaseFill} from 'react-icons/bs'\n\nconst JobItems = props => {\n  const {JobItemsList} = props\n  const {\n    id,\n    title,\n    rating,\n    companyLogoUrl,\n    location,\n    jobDescription,\n    packagePerAnnum,\n    employmentType,\n  } = JobItemsList\n  return (\n    <li>\n      <Link to={`/jobs/${id}`} className=\"job-item-container\">\n        <div className=\"job-item-inner\">\n          <div className=\"job-item-header\">\n            <img\n              className=\"job-item-company-logo\"\n              src={companyLogoUrl}\n              alt=\"company logo\"\n            />\n            <div className=\"job-item-header-description\">\n              <h1 className=\"job-title\">{title}</h1>\n              <div className=\"rating-container\">\n                <BsFillStarFill className=\"rating-star\" />\n                <p className=\"rating-value\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"job-item-body-info\">\n            <div className=\"job-item-body-info-left\">\n              <div className=\"icon-container\">\n                <MdLocationOn className=\"icon-img\" />\n                <p className=\"icon-label\">{location}</p>\n              </div>\n              <div className=\"icon-container employmentType-container\">\n                <BsFillBriefcaseFill className=\"icon-img\" />\n                <p className=\"icon-label\">{employmentType}</p>\n              </div>\n            </div>\n            <p className=\"job-lpa\">{packagePerAnnum}</p>\n          </div>\n          <div className=\"job-item-description-container\">\n            <h1 className=\"job-item-description-heading\">Description</h1>\n            <p className=\"job-item-description\">{jobDescription}</p>\n          </div>\n        </div>\n      </Link>\n    </li>\n  )\n}\nexport default JobItems\n","import './index.css'\n\nconst FilterGroup = props => {\n  const RenderEmploymentType = () => {\n    const {employmentTypesList} = props\n    return (\n      <div className=\"Employment-container\">\n        <h1 className=\"sidebar-heading\">Type of Employment</h1>\n        <ul className=\"employement-list\">\n          {employmentTypesList.map(i => {\n            const {CheckedEmploymentType} = props\n            const OnSelectCheckbox = event => {\n              CheckedEmploymentType(event)\n            }\n            return (\n              <li className=\"employment-list-item\" key={i.employmentTypeId}>\n                <input\n                  type=\"checkbox\"\n                  id={`Employment-checkbox-${i.employmentTypeId}`}\n                  name={i.employmentTypeId}\n                  value={i.employmentTypeId}\n                  className=\"employment-item-input\"\n                  onChange={OnSelectCheckbox}\n                />\n                <label\n                  className=\"employment-item-label\"\n                  htmlFor={`Employment-checkbox-${i.employmentTypeId}`}\n                >\n                  {i.label}\n                </label>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    )\n  }\n\n  const RenderSalary = () => {\n    const {salaryRangesList} = props\n    return (\n      <div className=\"salary-Range-container\">\n        <h1 className=\"sidebar-heading\">Salary Range</h1>\n        <ul className=\"salary-list\">\n          {salaryRangesList.map(i => {\n            const {ChangeSalaryRange} = props\n            const OnSelectSalary = event => {\n              ChangeSalaryRange(event.currentTarget.value)\n              console.log(event.currentTarget.value)\n            }\n            return (\n              <li className=\"salary-list-item\" key={i.label}>\n                <input\n                  type=\"radio\"\n                  id={i.salaryRangeId}\n                  name=\"salary-range-radio\"\n                  value={i.salaryRangeId}\n                  className=\"salary-item-input\"\n                  onChange={OnSelectSalary}\n                />\n                <label className=\"salary-item-label\" htmlFor={i.salaryRangeId}>\n                  {i.label}\n                </label>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {RenderEmploymentType()}\n      <hr className=\"hr-line\" />\n      {RenderSalary()}\n    </>\n  )\n}\nexport default FilterGroup\n","import './index.css'\nimport Cookies from 'js-cookie'\nimport {Component} from 'react'\nimport Loader from 'react-loader-spinner'\n\nconst ProfileApiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass Profile extends Component {\n  state = {\n    profileDetails: {},\n    apiStatus: ProfileApiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getProfileDetails()\n  }\n\n  getProfileDetails = async () => {\n    this.setState({apiStatus: ProfileApiStatusConstants.inProgress})\n    const jwtToken = Cookies.get('jwt_token')\n    const ProfileUrl = 'https://apis.ccbp.in/profile'\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(ProfileUrl, options)\n    if (response.ok) {\n      const FetchData = await response.json()\n      this.setState({\n        profileDetails: FetchData.profile_details,\n        apiStatus: ProfileApiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: ProfileApiStatusConstants.failure})\n    }\n  }\n\n  OnProfileRetry = () => {\n    this.getProfileDetails()\n  }\n\n  ProfileRenderSuccess = () => {\n    const {profileDetails} = this.state\n    return (\n      <div className=\"profile-main-container\">\n        <div className=\"profile-container\">\n          <img\n            className=\"profile-img\"\n            src={profileDetails.profile_image_url}\n            alt=\"profile\"\n          />\n          <h1 className=\"profile-name\">{profileDetails.name}</h1>\n          <p className=\"profile-description\">{profileDetails.short_bio}</p>\n        </div>\n      </div>\n    )\n  }\n\n  ProfileRenderLoading = () => (\n    <div className=\"Profile-main-load-failure\">\n      <div className=\"loader-container\" testid=\"loader\">\n        <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n      </div>\n    </div>\n  )\n\n  ProfileRenderFailure = () => (\n    <div className=\"Profile-main-load-failure\">\n      <button\n        type=\"button\"\n        className=\"profile-failure-button\"\n        onClick={this.OnProfileRetry}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  RenderAllProfile = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case ProfileApiStatusConstants.success:\n        return this.ProfileRenderSuccess()\n      case ProfileApiStatusConstants.failure:\n        return this.ProfileRenderFailure()\n      case ProfileApiStatusConstants.inProgress:\n        return this.ProfileRenderLoading()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return <> {this.RenderAllProfile()}</>\n  }\n}\nexport default Profile\n","import './index.css'\nimport {BsSearch} from 'react-icons/bs'\nimport {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport Navbar from '../Navbar'\nimport JobItems from '../JobItems'\nimport FilterGroup from '../FilterGroup'\nimport Profile from '../Profile'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\nclass Jobs extends Component {\n  state = {\n    apiStatus: apiStatusConstants.initial,\n    JobItemsArray: [],\n    InputSearch: '',\n    SalaryRangeId: '',\n    EmploymentId: [],\n  }\n\n  componentDidMount() {\n    this.GetJobItems()\n  }\n\n  JobItemsResponseStructure = Obj => {\n    const Template = {\n      id: Obj.id,\n      title: Obj.title,\n      rating: Obj.rating,\n      companyLogoUrl: Obj.company_logo_url,\n      location: Obj.location,\n      jobDescription: Obj.job_description,\n      packagePerAnnum: Obj.package_per_annum,\n      employmentType: Obj.employment_type,\n    }\n    return Template\n  }\n\n  GetJobItems = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const {InputSearch, SalaryRangeId, EmploymentId} = this.state\n    const EmploymentStr = EmploymentId ? EmploymentId.join() : undefined\n    const jwtToken = Cookies.get('jwt_token')\n    const FetchJobURL = `https://apis.ccbp.in/jobs?search=${InputSearch}&minimum_package=${SalaryRangeId}&employment_type=${EmploymentStr}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(FetchJobURL, options)\n    if (response.ok) {\n      const FetchData = await response.json()\n      const updateData = FetchData.jobs.map(i =>\n        this.JobItemsResponseStructure(i),\n      )\n      this.setState({\n        JobItemsArray: updateData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  onChangeSearchInput = event => {\n    this.setState({InputSearch: event.target.value})\n  }\n\n  onClickSearchIcon = () => {\n    this.GetJobItems()\n  }\n\n  OnRetry = () => {\n    this.GetJobItems()\n  }\n\n  RenderSearchContainer = () => {\n    const {InputSearch} = this.state\n    return (\n      <div className=\"search-container\">\n        <div className=\"search-input-container\">\n          <input\n            type=\"search\"\n            placeholder=\"Search\"\n            className=\"search-input\"\n            value={InputSearch}\n            onChange={this.onChangeSearchInput}\n          />\n        </div>\n        <div className=\"search-icon-container\">\n          <button\n            type=\"button\"\n            className=\"search-button\"\n            onClick={this.onClickSearchIcon}\n            testid=\"searchButton\"\n          >\n            <BsSearch className=\"search-icon\" />\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  RenderJobItems = () => {\n    const {JobItemsArray} = this.state\n    const ShowAllProducts = JobItemsArray.length > 0\n    return ShowAllProducts ? (\n      <ul className=\"job-item-main-container\">\n        {JobItemsArray.map(i => (\n          <JobItems key={i.id} JobItemsList={i} />\n        ))}\n      </ul>\n    ) : (\n      <div className=\"no-job-container\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n          alt=\"no jobs\"\n          className=\"no-job-img\"\n        />\n        <h1 className=\"no-job-heading\">No Jobs Found</h1>\n        <p className=\"no-job-description\">\n          We could not find any jobs. Try other filters\n        </p>\n      </div>\n    )\n  }\n\n  RenderLoader = () => (\n    <div className=\"loader-container\" testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  RenderJobFailure = () => (\n    <div className=\"job-failure-container\">\n      <img\n        className=\"job-failure-img\"\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n      />\n      <h1 className=\"job-failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"job-failure-description\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button\n        type=\"button\"\n        className=\"job-failure-button\"\n        onClick={this.OnRetry}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  ChangeSalaryRange = SalaryId => {\n    this.setState({SalaryRangeId: SalaryId}, this.GetJobItems)\n  }\n\n  CheckedEmploymentType = event => {\n    const {EmploymentId} = this.state\n    if (event.target.checked) {\n      this.setState(\n        j => ({\n          EmploymentId: [...j.EmploymentId, event.target.value],\n        }),\n        this.GetJobItems,\n      )\n    } else {\n      const remove = EmploymentId.indexOf(event.target.value)\n      this.setState(\n        k => ({\n          EmploymentId: k.EmploymentId.filter((_, i) => i !== remove),\n        }),\n        this.GetJobItems,\n      )\n    }\n  }\n\n  RenderAllJobLists = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.RenderJobItems()\n      case apiStatusConstants.failure:\n        return this.RenderJobFailure()\n      case apiStatusConstants.inProgress:\n        return this.RenderLoader()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const {SalaryRangeId, EmploymentId, UpdateCheckBoxArray} = this.state\n    return (\n      <>\n        <Navbar />\n        <div className=\"job-main-container\">\n          <div className=\"job-container\">\n            <div className=\"Filter-sidebar\">\n              <Profile />\n              <hr className=\"hr-line\" />\n              <FilterGroup\n                employmentTypesList={employmentTypesList}\n                salaryRangesList={salaryRangesList}\n                SalaryRangeId={SalaryRangeId}\n                ChangeSalaryRange={this.ChangeSalaryRange}\n                EmploymentId={EmploymentId}\n                CheckedEmploymentType={this.CheckedEmploymentType}\n                UpdateCheckBoxArray={UpdateCheckBoxArray}\n              />\n            </div>\n            <div className=\"job-profiles-container\">\n              <div className=\"search-main-container\">\n                {this.RenderSearchContainer()}\n              </div>\n              <div className=\"AllJobsList\">{this.RenderAllJobLists()}</div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\nexport default Jobs\n","import './index.css'\nimport {MdLocationOn} from 'react-icons/md'\nimport {BsFillStarFill, BsFillBriefcaseFill} from 'react-icons/bs'\n\nconst SimilarJobs = props => {\n  const {SimilarJobItems} = props\n  const {\n    title,\n    rating,\n    companyLogoUrl,\n    location,\n    jobDescription,\n    employmentType,\n  } = SimilarJobItems\n  return (\n    <li className=\"similar-job-item\">\n      <div className=\"similar-job-inner\">\n        <div className=\"similar-job-header\">\n          <img\n            className=\"similar-job-company-logo\"\n            src={companyLogoUrl}\n            alt=\"similar job company logo\"\n          />\n          <div className=\"similar-job-header-description\">\n            <h1 className=\"similar-job-title\">{title}</h1>\n            <div className=\"rating-container\">\n              <BsFillStarFill className=\"rating-star\" />\n              <p className=\"rating-value\">{rating}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"similar-job-description-container\">\n          <h1 className=\"similar-job-heading\">Description</h1>\n          <p className=\"similar-job-description\">{jobDescription}</p>\n        </div>\n        <div className=\"similar-job-body-info\">\n          <div className=\"similar-job-icon-container\">\n            <MdLocationOn className=\"similar-job-icon-img\" />\n            <p className=\"similar-job-icon-label\">{location}</p>\n          </div>\n          <div className=\"similar-job-icon-container similar-job-employmentType-container\">\n            <BsFillBriefcaseFill className=\"similar-job-icon-img\" />\n            <p className=\"similar-job-icon-label\">{employmentType}</p>\n          </div>\n        </div>\n      </div>\n    </li>\n  )\n}\nexport default SimilarJobs\n","import './index.css'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\nimport {MdLocationOn, MdOpenInNew} from 'react-icons/md'\nimport {BsFillStarFill, BsFillBriefcaseFill} from 'react-icons/bs'\nimport {Component} from 'react'\nimport Navbar from '../Navbar'\nimport SimilarJobs from '../SimilarJobs'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass JobDetail extends Component {\n  state = {\n    apiStatus: apiStatusConstants.initial,\n    JobDetails: {},\n    Skills: [],\n    LifeAtCompany: [],\n    similarJobs: [],\n  }\n\n  componentDidMount() {\n    this.GetJobDetails()\n  }\n\n  JobDetailsResponseStructure = Obj => {\n    const Template = {\n      id: Obj.id,\n      title: Obj.title,\n      rating: Obj.rating,\n      companyLogoUrl: Obj.company_logo_url,\n      location: Obj.location,\n      jobDescription: Obj.job_description,\n      packagePerAnnum: Obj.package_per_annum,\n      employmentType: Obj.employment_type,\n      companyWebsiteUrl: Obj.company_website_url,\n    }\n    return Template\n  }\n\n  SimilarJobsResponseStructure = Obj => {\n    const Template = {\n      id: Obj.id,\n      title: Obj.title,\n      rating: Obj.rating,\n      companyLogoUrl: Obj.company_logo_url,\n      location: Obj.location,\n      jobDescription: Obj.job_description,\n      employmentType: Obj.employment_type,\n    }\n    return Template\n  }\n\n  GetJobDetails = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const jwtToken = Cookies.get('jwt_token')\n    const JobDetailsUrl = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(JobDetailsUrl, options)\n    if (response.ok) {\n      const FetchData = await response.json()\n      const UpdateJobDetails = this.JobDetailsResponseStructure(\n        FetchData.job_details,\n      )\n      const UpdateJobSkills = FetchData.job_details.skills.map(j => ({\n        name: j.name,\n        SkillImgUrl: j.image_url,\n      }))\n      const UpdateLifeAtCompany = {\n        description: FetchData.job_details.life_at_company.description,\n        LifeImageUrl: FetchData.job_details.life_at_company.image_url,\n      }\n      const UpdateSimilarJobs = FetchData.similar_jobs.map(i =>\n        this.SimilarJobsResponseStructure(i),\n      )\n      this.setState({\n        apiStatus: apiStatusConstants.success,\n        JobDetails: UpdateJobDetails,\n        Skills: UpdateJobSkills,\n        LifeAtCompany: UpdateLifeAtCompany,\n        similarJobs: UpdateSimilarJobs,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  OnRetry = () => {\n    this.GetJobDetails()\n  }\n\n  RenderJobDetails = () => {\n    const {JobDetails, Skills, LifeAtCompany} = this.state\n    const {\n      title,\n      rating,\n      location,\n      jobDescription,\n      companyLogoUrl,\n      packagePerAnnum,\n      employmentType,\n      companyWebsiteUrl,\n    } = JobDetails\n    const {description, LifeImageUrl} = LifeAtCompany\n    return (\n      <div className=\"job-Detail-container\">\n        <div className=\"job-Detail-inner\">\n          <div className=\"job-Detail-header\">\n            <img\n              className=\"job-Detail-company-logo\"\n              src={companyLogoUrl}\n              alt=\"job details company logo\"\n            />\n            <div className=\"job-Detail-header-description\">\n              <h1 className=\"job-Detail-title\">{title}</h1>\n              <div className=\"rating-container\">\n                <BsFillStarFill className=\"rating-star\" />\n                <p className=\"rating-value\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"job-Detail-body-info\">\n            <div className=\"job-Detail-body-info-left\">\n              <div className=\"Job-Detail-icon-container\">\n                <MdLocationOn className=\"Job-Detail-icon-img\" />\n                <p className=\"Job-Detail-icon-label\">{location}</p>\n              </div>\n              <div className=\"Job-Detail-icon-container Job-Detail-employmentType-container\">\n                <BsFillBriefcaseFill className=\"Job-Detail-icon-img\" />\n                <p className=\"Job-Detail-icon-label\">{employmentType}</p>\n              </div>\n            </div>\n            <p className=\"Job-Detail-lpa\">{packagePerAnnum}</p>\n          </div>\n          <div className=\"job-Detail-description-container\">\n            <div className=\"Job-Detail-description-heading-container\">\n              <h1 className=\"job-Detail-heading\">Description</h1>\n              <a\n                className=\"Job-Detail-visit\"\n                target=\"blank\"\n                href={companyWebsiteUrl}\n              >\n                Visit <MdOpenInNew />\n              </a>\n            </div>\n            <p className=\"job-Detail-description\">{jobDescription}</p>\n          </div>\n          <div className=\"Job-Detail-Skills-container\">\n            <h1 className=\"job-Detail-heading\">Skills</h1>\n            <ul className=\"Job-Detail-skill-list\">\n              {Skills.map(i => (\n                <li className=\"Job-Detail-skill-item\" key={i.name}>\n                  <img src={i.SkillImgUrl} alt={i.name} className=\"skill-img\" />\n                  <p className=\"skill-name\">{i.name}</p>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"Job-Detail-Life-at-company\">\n            <h1 className=\"job-Detail-heading\">Life at Company</h1>\n            <div className=\"Job-Detail-Life-at-company-description-container\">\n              <p className=\"Job-Detail-Life-at-company-description\">\n                {description}\n              </p>\n              <img\n                src={LifeImageUrl}\n                className=\"Job-Detail-Life-at-company-img\"\n                alt=\"life at company\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  RenderSimilarJobs = () => {\n    const {similarJobs} = this.state\n    return (\n      <div className=\"similar-job-container\">\n        <h1 className=\"similar-job-heading\">Similar Jobs</h1>\n        <ul className=\"similar-jobs-list\">\n          {similarJobs.map(i => (\n            <SimilarJobs key={i.id} SimilarJobItems={i} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  RenderLoader = () => (\n    <div className=\"loader-container\" testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  RenderJobFailure = () => (\n    <div className=\"job-failure-container\">\n      <img\n        className=\"job-failure-img\"\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n      />\n      <h1 className=\"job-failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"job-failure-description\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button\n        type=\"button\"\n        className=\"job-failure-button\"\n        onClick={this.OnRetry}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  RenderJobDetailPage = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return (\n          <>\n            {this.RenderJobDetails()}\n            {this.RenderSimilarJobs()}\n          </>\n        )\n      case apiStatusConstants.failure:\n        return this.RenderJobFailure()\n      case apiStatusConstants.inProgress:\n        return this.RenderLoader()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar />\n        <div className=\"job-detail-main-container\">\n          {this.RenderJobDetailPage()}\n        </div>\n      </>\n    )\n  }\n}\nexport default JobDetail\n","import './index.css'\nimport Navbar from '../Navbar'\n\nconst NotFound = () => (\n  <div>\n    <Navbar />\n    <div className=\"Not-Found-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n        alt=\"not found\"\n        className=\"Not-Found-img\"\n      />\n      <div className=\"Not-Found-content-container\">\n        <h1 className=\"Not-Found-heading\">Page Not Found</h1>\n        <p className=\"Not-Found-description\">\n          we&apos;re sorry, the page you requested could not be found\n        </p>\n      </div>\n    </div>\n  </div>\n)\n\nexport default NotFound\n","import {Route, Switch, Redirect} from 'react-router-dom'\nimport Login from './components/Login'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport Home from './components/Home'\nimport Jobs from './components/Jobs'\nimport JobDetail from './components/JobDetail'\nimport NotFound from './components/NotFound'\nimport './App.css'\n\n// Replace your code here\nconst App = () => (\n  <div>\n    <Switch>\n      <Route exact path=\"/login\" component={Login} />\n      <ProtectedRoute exact path=\"/\" component={Home} />\n      <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n      <ProtectedRoute exact path=\"/jobs/:id\" component={JobDetail} />\n      <Route path=\"/not-found\" component={NotFound} />\n      <Redirect to=\"not-found\" />\n    </Switch>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}